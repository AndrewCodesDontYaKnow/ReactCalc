{"ast":null,"code":"var _jsxFileName = \"/Users/andrewsmith/Desktop/ReactCalc/reactcalc/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.addToInput = val => {\n      this.setState({\n        input: this.state.input + val\n      });\n    };\n\n    this.addZeroToInput = val => {\n      // if this.state.input is not empty then add zero\n      if (this.state.input !== \"\") {\n        this.setState({\n          input: this.state.input + val\n        });\n      }\n    };\n\n    this.addDecimal = val => {\n      // if there is no decimal in input, then add the decimal\n      if (this.state.input.indexOf(\".\") === -1) {\n        this.setState({\n          input: this.state.input + val\n        });\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: \"\"\n      });\n    };\n\n    this.add = () => {\n      // store the previous number so we can use it in the operator function\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"plus\";\n    };\n\n    this.evaluate = () => {\n      this.state.currentNumber = this.state.input;\n\n      if (this.state.operator == \"plus\") {\n        this.setState({\n          input: parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"subtract\") {\n        this.setState({\n          input: parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"multiply\") {\n        this.setState({\n          input: parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"divide\") {\n        this.setState({\n          input: parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber)\n        });\n      }\n    };\n\n    this.subtract = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"subtract\";\n    };\n\n    this.multiply = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"multiply\";\n    };\n\n    this.divide = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"divide\";\n    };\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calc-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.divide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.multiply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addZeroToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.evaluate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.subtract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ClearButton, {\n      handleClear: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewsmith/Desktop/ReactCalc/reactcalc/src/App.js"],"names":["React","Component","Button","Input","ClearButton","App","constructor","props","addToInput","val","setState","input","state","addZeroToInput","addDecimal","indexOf","clearInput","add","previousNumber","operator","evaluate","currentNumber","parseFloat","subtract","multiply","divide","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n    };\n  }\n\n  addToInput = (val) => {\n    this.setState({ input: this.state.input + val });\n  };\n\n  addZeroToInput = (val) => {\n    // if this.state.input is not empty then add zero\n    if (this.state.input !== \"\") {\n      this.setState({ input: this.state.input + val });\n    }\n  };\n\n  addDecimal = (val) => {\n    // if there is no decimal in input, then add the decimal\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({ input: this.state.input + val });\n    }\n  };\n\n  clearInput = () => {\n    this.setState({ input: \"\" });\n  };\n\n  add = () => {\n    // store the previous number so we can use it in the operator function\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"plus\";\n  };\n\n  evaluate = () => {\n    this.state.currentNumber = this.state.input;\n    if (this.state.operator == \"plus\") {\n      this.setState({\n        input:\n          parseFloat(this.state.previousNumber) +\n          parseFloat(this.state.currentNumber),\n      });\n    } else if (this.state.operator == \"subtract\") {\n      this.setState({\n        input:\n          parseFloat(this.state.previousNumber) -\n          parseFloat(this.state.currentNumber),\n      });\n    } else if (this.state.operator == \"multiply\") {\n      this.setState({\n        input:\n          parseFloat(this.state.previousNumber) *\n          parseFloat(this.state.currentNumber),\n      });\n    } else if (this.state.operator == \"divide\") {\n      this.setState({\n        input:\n          parseFloat(this.state.previousNumber) /\n          parseFloat(this.state.currentNumber),\n      });\n    }\n  };\n\n  subtract = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"subtract\";\n  };\n\n  multiply = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"multiply\";\n  };\n\n  divide = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"divide\";\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.divide}>/</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.multiply}>*</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={this.addZeroToInput}>0</Button>\n            <Button handleClick={this.evaluate}>=</Button>\n            <Button handleClick={this.subtract}>-</Button>\n          </div>\n\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n          </div>\n        </div>\n        <div className=\"list-wrapper\">\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}