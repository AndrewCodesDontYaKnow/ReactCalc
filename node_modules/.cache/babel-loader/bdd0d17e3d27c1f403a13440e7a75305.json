{"ast":null,"code":"var _jsxFileName = \"/Users/andrewsmith/Desktop/ReactCalc/reactcalc/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport CalculationList from \"./components/CalculationList\";\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.addToInput = val => {\n      this.setState({\n        input: this.state.input + val\n      });\n      this.setState({\n        calcRecord: this.state.calcRecord + val\n      });\n    };\n\n    this.addZeroToInput = val => {\n      // if this.state.input is not empty then add zero\n      if (this.state.input !== \"\") {\n        this.setState({\n          input: this.state.input + val\n        });\n        this.setState({\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.addDecimal = val => {\n      // if there is no decimal in input, then add the decimal\n      if (this.state.input.indexOf(\".\") === -1) {\n        this.setState({\n          input: this.state.input + val\n        });\n        this.setState({\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: \"\"\n      });\n    };\n\n    this.add = () => {\n      // store the previous number so we can use it in the operator function\n      // this.state.previousNumber = this.state.input;\n      // this.setState({ previousNumber: this.state.input })\n      // this.setState({ input: \"\" });\n      // this.state.operator = \"plus\";\n      // this.setState({ calcRecord: this.state.calcRecord + \" + \" })\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"plus\",\n        calcRecord: this.state.calcRecord + \"+\"\n      });\n    };\n\n    this.handleEvaluate = () => {\n      let calcArray = [];\n      let calculationRecord = this.setAnswer(this.evaluate());\n      this.setState({\n        input: this.evaluate() // calcList: this.state.calcList.unshift(calculationRecord)\n\n      });\n      this.state.calcList.unshift(calculationRecord);\n      console.log(this.state.calcList); // calcArray.push(this.evaluate())\n      // console.log(calcArray)\n    };\n\n    this.evaluate = () => {\n      this.state.currentNumber = this.state.input;\n      let answer = 0;\n\n      if (this.state.operator === \"plus\") {\n        answer = parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"subtract\") {\n        answer = parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"multiply\") {\n        answer = parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"divide\") {\n        answer = parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber);\n      }\n\n      return answer;\n    };\n\n    this.setAnswer = answer => {\n      console.log(answer);\n      this.setState({\n        calcRecord: this.state.calcRecord + \" = \" + answer,\n        calcList: this.state.calcList.unshift(this.state.calcRecord)\n      });\n      return this.setState({\n        calcRecord: this.state.calcRecord + \" = \" + answer\n      });\n    };\n\n    this.subtract = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"subtract\";\n      this.setState({\n        calcRecord: this.state.calcRecord + \" - \"\n      });\n    };\n\n    this.multiply = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"multiply\";\n      this.setState({\n        calcRecord: this.state.calcRecord + \" * \"\n      });\n    };\n\n    this.divide = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"divide\";\n      this.setState({\n        calcRecord: this.state.calcRecord + \" / \"\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n      calcList: ['hi', 'yo']\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calc-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.divide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.multiply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addZeroToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.handleEvaluate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.subtract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ClearButton, {\n      handleClear: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NumberList, {\n      calcList: this.state.calcList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewsmith/Desktop/ReactCalc/reactcalc/src/App.js"],"names":["React","Component","Button","Input","ClearButton","CalculationList","App","constructor","props","addToInput","val","setState","input","state","calcRecord","addZeroToInput","addDecimal","indexOf","clearInput","add","previousNumber","operator","handleEvaluate","calcArray","calculationRecord","setAnswer","evaluate","calcList","unshift","console","log","currentNumber","answer","parseFloat","subtract","multiply","divide","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport CalculationList from \"./components/CalculationList\";\n\n\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n      calcList: ['hi', 'yo'],\n    };\n  }\n\n  addToInput = (val) => {\n    this.setState({ input: this.state.input + val });\n    this.setState({ calcRecord: this.state.calcRecord + val });\n  };\n\n  addZeroToInput = (val) => {\n    // if this.state.input is not empty then add zero\n    if (this.state.input !== \"\") {\n      this.setState({ input: this.state.input + val });\n      this.setState({ calcRecord: this.state.calcRecord + val });\n    }\n  };\n\n  addDecimal = (val) => {\n    // if there is no decimal in input, then add the decimal\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({ input: this.state.input + val });\n      this.setState({ calcRecord: this.state.calcRecord + val });\n    }\n  };\n\n  clearInput = () => {\n    this.setState({ input: \"\" });\n  };\n\n  add = () => {\n    // store the previous number so we can use it in the operator function\n    // this.state.previousNumber = this.state.input;\n    // this.setState({ previousNumber: this.state.input })\n    // this.setState({ input: \"\" });\n    // this.state.operator = \"plus\";\n    // this.setState({ calcRecord: this.state.calcRecord + \" + \" })\n\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"plus\",\n      calcRecord: this.state.calcRecord + \"+\",\n    });\n  };\n\n  handleEvaluate = () => {\n    let calcArray = [];\n    let calculationRecord = this.setAnswer(this.evaluate());\n    this.setState({\n      input: this.evaluate(),\n      // calcList: this.state.calcList.unshift(calculationRecord)\n    });\n\n    this.state.calcList.unshift(calculationRecord);\n    console.log(this.state.calcList);\n\n    // calcArray.push(this.evaluate())\n    // console.log(calcArray)\n  };\n\n  evaluate = () => {\n    this.state.currentNumber = this.state.input;\n\n    let answer = 0;\n\n    if (this.state.operator === \"plus\") {\n      answer =\n        parseFloat(this.state.previousNumber) +\n        parseFloat(this.state.currentNumber);\n    } else if (this.state.operator === \"subtract\") {\n      answer =\n        parseFloat(this.state.previousNumber) -\n        parseFloat(this.state.currentNumber);\n    } else if (this.state.operator === \"multiply\") {\n      answer =\n        parseFloat(this.state.previousNumber) *\n        parseFloat(this.state.currentNumber);\n    } else if (this.state.operator === \"divide\") {\n      answer =\n        parseFloat(this.state.previousNumber) /\n        parseFloat(this.state.currentNumber);\n    }\n\n    return answer;\n  };\n\n  setAnswer = (answer) => {\n    console.log(answer)\n\n    this.setState({\n      \n      calcRecord: this.state.calcRecord + \" = \" + answer,\n      calcList: this.state.calcList.unshift(this.state.calcRecord),\n    });\n    return this.setState({\n      calcRecord: this.state.calcRecord + \" = \" + answer,\n    });\n  };\n\n  subtract = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"subtract\";\n    this.setState({ calcRecord: this.state.calcRecord + \" - \" });\n  };\n\n  multiply = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"multiply\";\n    this.setState({ calcRecord: this.state.calcRecord + \" * \" });\n  };\n\n  divide = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"divide\";\n    this.setState({ calcRecord: this.state.calcRecord + \" / \" });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.divide}>/</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.multiply}>*</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={this.addZeroToInput}>0</Button>\n            <Button handleClick={this.handleEvaluate}>=</Button>\n            <Button handleClick={this.subtract}>-</Button>\n          </div>\n\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n          </div>\n        </div>\n        <div className=\"list-wrapper\">\n          <NumberList calcList={this.state.calcList} />\n\n          {/* <CalculationList>{this.state.calcRecord}</CalculationList> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}