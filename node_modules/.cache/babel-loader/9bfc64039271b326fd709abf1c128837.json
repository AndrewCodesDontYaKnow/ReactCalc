{"ast":null,"code":"var _jsxFileName = \"/Users/andrewsmith/Desktop/ReactCalc/reactcalc/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\"; // import CalculationList from \"./components/CalculationList\";\n\nfunction NumberList(props) {\n  console.log(props);\n  const calculationList = props.calcList;\n  const listItems = calculationList.map(number => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, number));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, listItems);\n}\n\nconst calcList = [];\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.addToInput = val => {\n      this.setState({\n        input: this.state.input + val\n      });\n      this.setState({\n        calcRecord: this.state.calcRecord + val\n      });\n    };\n\n    this.addZeroToInput = val => {\n      // if this.state.input is not empty then add zero\n      if (this.state.input !== \"\") {\n        this.setState({\n          input: this.state.input + val\n        });\n        this.setState({\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.addDecimal = val => {\n      // if there is no decimal in input, then add the decimal\n      if (this.state.input.indexOf(\".\") === -1) {\n        this.setState({\n          input: this.state.input + val\n        });\n        this.setState({\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: \"\"\n      });\n    };\n\n    this.add = (num1, num2) => {\n      let calculation = num1 + num2;\n      let calculationString = `${num1} + ${num2} = ${calculation}`; // if statement checking if the calcList array is < 10. If so, just push calculationString to it\n      // if it's equal to ten, remove the first item of the calcList array and then push calculationString to it\n    };\n\n    this.handleEvaluate = () => {\n      let calcArray = [];\n      let calculationRecord = this.setAnswer(this.evaluate());\n      this.setState({\n        input: this.evaluate()\n      });\n      console.log(calculationRecord);\n      calcList.unshift(calculationRecord);\n      console.log(calcList);\n      calcArray.push(this.evaluate());\n      console.log(calcArray);\n    };\n\n    this.evaluate = () => {\n      this.setState({\n        currentNumber: this.state.input\n      });\n      let answer = 0;\n\n      if (this.state.operator === \"plus\") {\n        answer = parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"subtract\") {\n        answer = parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"multiply\") {\n        answer = parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"divide\") {\n        answer = parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber);\n      }\n\n      return answer;\n    };\n\n    this.setAnswer = answer => {\n      this.setState({\n        calcRecord: this.state.calcRecord + \" = \" + answer\n      });\n      return this.setState({\n        calcRecord: this.state.calcRecord + \" = \" + answer\n      });\n    };\n\n    this.subtract = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"subtract\",\n        calcRecord: this.state.calcRecord + \" - \"\n      });\n    };\n\n    this.multiply = () => {\n      // this.state.previousNumber = this.state.input;\n      // this.setState({ input: \"\" });\n      // this.state.operator = \"multiply\";\n      // this.setState({ calcRecord: this.state.calcRecord + \" * \" });\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"multiply\",\n        calcRecord: this.state.calcRecord + \" * \"\n      });\n    };\n\n    this.divide = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"divide\";\n      this.setState({\n        calcRecord: this.state.calcRecord + \" / \"\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calc-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.divide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.multiply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addZeroToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.handleEvaluate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.subtract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ClearButton, {\n      handleClear: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NumberList, {\n      calcList: calcList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewsmith/Desktop/ReactCalc/reactcalc/src/App.js"],"names":["React","Component","Button","Input","ClearButton","NumberList","props","console","log","calculationList","calcList","listItems","map","number","App","constructor","addToInput","val","setState","input","state","calcRecord","addZeroToInput","addDecimal","indexOf","clearInput","add","num1","num2","calculation","calculationString","handleEvaluate","calcArray","calculationRecord","setAnswer","evaluate","unshift","push","currentNumber","answer","operator","parseFloat","previousNumber","subtract","multiply","divide","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\n// import CalculationList from \"./components/CalculationList\";\n\nfunction NumberList(props) {\n  console.log(props)\n  const calculationList = props.calcList;\n\n  const listItems = calculationList.map((number) =>\n    <li>{number}</li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\nconst calcList = [];\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n    };\n\n  }\n\n\n\n  addToInput = (val) => {\n    this.setState({ input: this.state.input + val });\n    this.setState({ calcRecord: this.state.calcRecord + val })\n  };\n\n  addZeroToInput = (val) => {\n    // if this.state.input is not empty then add zero\n    if (this.state.input !== \"\") {\n      this.setState({ input: this.state.input + val });\n      this.setState({ calcRecord: this.state.calcRecord + val })\n    }\n  };\n\n  addDecimal = (val) => {\n    // if there is no decimal in input, then add the decimal\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({ input: this.state.input + val });\n      this.setState({ calcRecord: this.state.calcRecord + val })\n    }\n  };\n\n  clearInput = () => {\n    this.setState({ input: \"\" });\n  };\n\n  // add = () => {\n\n  //   this.setState({\n  //     previousNumber: this.state.input,\n  //     input: \"\",\n  //     operator: \"plus\",\n  //     calcRecord: this.state.calcRecord + \"+\"\n  //   })\n  // };\n\n  add = (num1, num2) => {\n    let calculation = num1 + num2\n    let calculationString = `${num1} + ${num2} = ${calculation}`\n     // if statement checking if the calcList array is < 10. If so, just push calculationString to it\n\n     \n    // if it's equal to ten, remove the first item of the calcList array and then push calculationString to it\n  }\n\n\nhandleEvaluate = () => {\n  let calcArray = [];\n  let calculationRecord = this.setAnswer(this.evaluate());\n  this.setState({\n    input: this.evaluate()\n  }) \nconsole.log(calculationRecord)\ncalcList.unshift(calculationRecord)\nconsole.log(calcList)\n\n  calcArray.push(this.evaluate())\n  console.log(calcArray)\n  \n}\n\n  evaluate = () => {\n  this.setState({\n    currentNumber: this.state.input\n  })    \n\n    let answer = 0;\n\n    if (this.state.operator === \"plus\") {\n      \n        answer = \n          parseFloat(this.state.previousNumber) +\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"subtract\") {\n      answer = \n          parseFloat(this.state.previousNumber) -\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"multiply\") {\n      answer = \n          parseFloat(this.state.previousNumber) *\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"divide\") {\n      answer = \n          parseFloat(this.state.previousNumber) /\n          parseFloat(this.state.currentNumber)\n      \n    }\n\n\n\n    return answer\n  };\n\nsetAnswer = (answer) => {\n\n  this.setState({ calcRecord: this.state.calcRecord + \" = \" + answer });\n  return this.setState({ calcRecord: this.state.calcRecord + \" = \" + answer });\n\n}\n\n  subtract = () => {\n\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"subtract\",\n      calcRecord: this.state.calcRecord + \" - \"\n    })\n\n  };\n\n  multiply = () => {\n    // this.state.previousNumber = this.state.input;\n    // this.setState({ input: \"\" });\n    // this.state.operator = \"multiply\";\n    // this.setState({ calcRecord: this.state.calcRecord + \" * \" });\n\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"multiply\",\n      calcRecord: this.state.calcRecord + \" * \",\n    })\n\n  };\n\n  divide = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"divide\";\n    this.setState({ calcRecord: this.state.calcRecord + \" / \" });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.divide}>/</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.multiply}>*</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={this.addZeroToInput}>0</Button>\n            <Button handleClick={this.handleEvaluate}>=</Button>\n            <Button handleClick={this.subtract}>-</Button>\n          </div>\n\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n          </div>\n        </div>\n        <div className=\"list-wrapper\">\n\n        <NumberList calcList={calcList} />\n\n      {/* <CalculationList>{this.state.calcRecord}</CalculationList> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}