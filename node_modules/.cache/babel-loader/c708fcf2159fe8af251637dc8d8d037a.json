{"ast":null,"code":"var _jsxFileName = \"/Users/andrewsmith/Desktop/ReactCalc/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\"; // import axios from 'axios';\n\nfunction NumberList(props) {\n  // console.log(props)\n  const calculationList = props.calcList; // console.log(props.calcList)\n\n  const listItems = calculationList.map(number => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, number));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, listItems);\n}\n\nconst calcList = [];\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.getCalculations = _ => {\n      fetch('http://localhost:4000/calculations').then(response => response.json()).then(response => this.setState({\n        calculations: response.data\n      })).catch(err => console.error(err));\n    };\n\n    this.addCalculation = _ => {\n      fetch(`http://localhost:4000/calculations/add?calc=${this.state.calculation.calc}`) // .then(response => response.json())\n      .then(this.getCalculations).catch(err => console.error(err));\n    };\n\n    this.renderCalculation = ({\n      id,\n      calc\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 39\n      }\n    }, calc);\n\n    this.addToInput = val => {\n      this.setState({\n        input: this.state.input + val\n      });\n      this.setState({\n        calcRecord: this.state.calcRecord + val\n      });\n    };\n\n    this.addZeroToInput = val => {\n      // if this.state.input is not empty then add zero\n      if (this.state.input !== \"\") {\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.addDecimal = val => {\n      // if there is no decimal in input, then add the decimal\n      if (this.state.input.indexOf(\".\") === -1) {\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: \"\",\n        calcRecord: \"\"\n      });\n    };\n\n    this.add = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"plus\",\n        calcRecord: this.state.calcRecord + \"+\"\n      });\n    };\n\n    this.handleEvaluate = () => {\n      this.setAnswer(this.evaluate());\n      this.addCalculation();\n      this.setState({\n        input: this.evaluate()\n      });\n    };\n\n    this.evaluate = () => {\n      this.state.currentNumber = this.state.input;\n      let answer = 0;\n\n      if (this.state.operator === \"plus\") {\n        answer = parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"subtract\") {\n        answer = parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"multiply\") {\n        answer = parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"divide\") {\n        answer = parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber);\n      }\n\n      return answer;\n    };\n\n    this.setAnswer = answer => {\n      let result = this.state.calcRecord + \" = \" + answer;\n\n      if (calcList.length < 10) {\n        this.setState({\n          calcRecord: result,\n          calcList: calcList.unshift(result)\n        });\n      } else if (calcList.length >= 10) {\n        this.setState({\n          calcList: calcList.pop()\n        });\n        this.setState({\n          calcRecord: result,\n          calcList: calcList.unshift(result)\n        });\n      }\n    };\n\n    this.subtract = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"subtract\",\n        calcRecord: this.state.calcRecord + \" - \"\n      });\n    };\n\n    this.multiply = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"multiply\",\n        calcRecord: this.state.calcRecord + \" * \"\n      });\n    };\n\n    this.divide = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"divide\",\n        calcRecord: this.state.calcRecord + \" / \"\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n      calculations: [],\n      calculation: {\n        id: 1,\n        calc: 'sample calculation'\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getCalculations();\n  }\n\n  render() {\n    // const { calculations } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calcArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, this.state.calculations.map(this.renderCalculation)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calc-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.divide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.multiply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addZeroToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.handleEvaluate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.subtract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ClearButton, {\n      handleClear: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NumberList, {\n      calcList: calcList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default App; // submit = (event) => {\n//   event.preventDefault();\n//   const payload = {\n//     calculation: this.state.calcRecord\n//   };\n//   axios({\n//     url: 'http://localhost:8080/api/save',\n//     method: 'POST',\n//     data: payload\n//   })\n//   .then(() => {\n//     console.log('Data has been sent to server')\n//   })\n//   .catch(() => {\n//     console.log('Internal server error')\n//   });\n// }","map":{"version":3,"sources":["/Users/andrewsmith/Desktop/ReactCalc/src/App.js"],"names":["React","Component","Button","Input","ClearButton","NumberList","props","calculationList","calcList","listItems","map","number","App","constructor","getCalculations","_","fetch","then","response","json","setState","calculations","data","catch","err","console","error","addCalculation","state","calculation","calc","renderCalculation","id","addToInput","val","input","calcRecord","addZeroToInput","addDecimal","indexOf","clearInput","add","previousNumber","operator","handleEvaluate","setAnswer","evaluate","currentNumber","answer","parseFloat","result","length","unshift","pop","subtract","multiply","divide","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\n// import axios from 'axios';\n\n\n\nfunction NumberList(props) {\n  // console.log(props)\n  const calculationList = props.calcList;\n  // console.log(props.calcList)\n  const listItems = calculationList.map((number) =>\n    <li>{number}</li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\nconst calcList = [];\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n      calculations: [],\n      calculation: {\n        id: 1,\n        calc: 'sample calculation'\n      }\n    };\n  }\n\ncomponentDidMount() {\n  this.getCalculations();\n}\n\ngetCalculations = _ => {\n  fetch('http://localhost:4000/calculations')\n    .then(response => response.json())\n    .then(response => this.setState({ calculations: response.data }))\n    .catch(err => console.error(err))\n}\n\naddCalculation = _ => {\n  fetch(`http://localhost:4000/calculations/add?calc=${this.state.calculation.calc}`)\n    // .then(response => response.json())\n    .then(this.getCalculations)\n    .catch(err => console.error(err))\n}\n\n// \nrenderCalculation = ({ id, calc }) => <div key={id}>{calc}</div>\n\n\n// comment new comment\n  addToInput = (val) => {\n    this.setState({ input: this.state.input + val });\n    this.setState({ calcRecord: this.state.calcRecord + val })\n  };\n\n  addZeroToInput = (val) => {\n    // if this.state.input is not empty then add zero\n    if (this.state.input !== \"\") {\n      this.setState({ \n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val\n       });\n    }\n  };\n\n  addDecimal = (val) => {\n    // if there is no decimal in input, then add the decimal\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({ \n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val\n       });\n    }\n  };\n\n  clearInput = () => {\n    this.setState({ \n      input: \"\",\n      calcRecord: \"\"\n    });\n  };\n\n  add = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"plus\",\n      calcRecord: this.state.calcRecord + \"+\"\n    })\n\n  };\n\n\nhandleEvaluate = () => {\n  this.setAnswer(this.evaluate());\n  this.addCalculation();\n  this.setState({\n    input: this.evaluate()\n  }) \n}\n\n  evaluate = () => {\n    this.state.currentNumber = this.state.input;\n\n    let answer = 0;\n\n    if (this.state.operator === \"plus\") {\n      \n        answer = \n          parseFloat(this.state.previousNumber) +\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"subtract\") {\n      answer = \n          parseFloat(this.state.previousNumber) -\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"multiply\") {\n      answer = \n          parseFloat(this.state.previousNumber) *\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"divide\") {\n      answer = \n          parseFloat(this.state.previousNumber) /\n          parseFloat(this.state.currentNumber)\n      \n    }\n    return answer\n  };\n\nsetAnswer = (answer) => {\n\nlet result = this.state.calcRecord + \" = \" + answer\n\nif (calcList.length < 10){\n  this.setState({ \n    calcRecord: result,\n    calcList: calcList.unshift(result)\n  });\n} else if (calcList.length >= 10) {\n  this.setState({ calcList: calcList.pop()})\n  this.setState({ \n    calcRecord: result,\n    calcList: calcList.unshift(result)\n  });\n}}\n\n\n  subtract = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"subtract\",\n      calcRecord: this.state.calcRecord + \" - \"\n    })\n  };\n\n  multiply = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"multiply\",\n      calcRecord: this.state.calcRecord + \" * \"\n    })  };\n\n  divide = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"divide\",\n      calcRecord: this.state.calcRecord + \" / \"\n    })\n  };\n\n  render() {\n    // const { calculations } = this.state;\n    return (\n      <div className=\"App\">\n\n        <div className=\"calcArea\">\n          {this.state.calculations.map(this.renderCalculation)}\n        </div>\n\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.divide}>/</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.multiply}>*</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={this.addZeroToInput}>0</Button>\n            <Button handleClick={this.handleEvaluate}>=</Button>\n            <Button handleClick={this.subtract}>-</Button>\n          </div>\n\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n          </div>\n        </div>\n        <div className=\"list-wrapper\">\n\n        <NumberList calcList={calcList} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n// submit = (event) => {\n//   event.preventDefault();\n\n//   const payload = {\n//     calculation: this.state.calcRecord\n//   };\n\n//   axios({\n//     url: 'http://localhost:8080/api/save',\n//     method: 'POST',\n//     data: payload\n//   })\n//   .then(() => {\n//     console.log('Data has been sent to server')\n//   })\n//   .catch(() => {\n//     console.log('Internal server error')\n//   });\n\n// }"]},"metadata":{},"sourceType":"module"}