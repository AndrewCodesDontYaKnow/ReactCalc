{"ast":null,"code":"var _jsxFileName = \"/Users/andrewsmith/Desktop/ReactCalc/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport axios from 'axios';\nimport CalculationList from \"./components/CalculationList\";\n\nfunction NumberList(props) {\n  console.log(props);\n  const calculationList = props.calcList;\n  console.log(props.calcList);\n  const listItems = calculationList.map(number => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, number));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, listItems);\n}\n\nconst calcList = [];\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.addToInput = val => {\n      this.setState({\n        input: this.state.input + val\n      });\n      this.setState({\n        calcRecord: this.state.calcRecord + val\n      });\n    };\n\n    this.addZeroToInput = val => {\n      // if this.state.input is not empty then add zero\n      if (this.state.input !== \"\") {\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.addDecimal = val => {\n      // if there is no decimal in input, then add the decimal\n      if (this.state.input.indexOf(\".\") === -1) {\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: \"\",\n        calcRecord: \"\"\n      });\n    };\n\n    this.add = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"plus\",\n        calcRecord: this.state.calcRecord + \"+\"\n      });\n    };\n\n    this.submit = event => {\n      event.preventDefault();\n      const payload = {\n        calculation: this.state.calcRecord\n      };\n      axios({\n        url: 'http://localhost:8080/api/save',\n        method: 'POST',\n        data: payload\n      }).then(() => {\n        console.log('Data has been sent to server');\n      }).catch(() => {\n        console.log('Internal server error');\n      });\n    };\n\n    this.handleEvaluate = () => {\n      let calcArray = [];\n      this.setAnswer(this.evaluate());\n      this.setState({\n        input: this.evaluate()\n      });\n    };\n\n    this.evaluate = () => {\n      this.state.currentNumber = this.state.input;\n      let answer = 0;\n\n      if (this.state.operator === \"plus\") {\n        answer = parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"subtract\") {\n        answer = parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"multiply\") {\n        answer = parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"divide\") {\n        answer = parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber);\n      }\n\n      return answer;\n    };\n\n    this.setAnswer = answer => {\n      // calcList.unshift(this.evaluate())\n      let result = this.state.calcRecord + \" = \" + answer;\n\n      if (calcList.length < 10) {\n        this.setState({\n          calcRecord: result,\n          calcList: calcList.unshift(result)\n        });\n      } else if (calcList.length >= 10) {\n        this.setState({\n          calcList: calcList.pop()\n        });\n        this.setState({\n          calcRecord: result,\n          calcList: calcList.unshift(result)\n        });\n      } // this.submit();\n\n    };\n\n    this.subtract = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"subtract\";\n      this.setState({\n        calcRecord: this.state.calcRecord + \" - \"\n      });\n    };\n\n    this.multiply = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"multiply\";\n      this.setState({\n        calcRecord: this.state.calcRecord + \" * \"\n      });\n    };\n\n    this.divide = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"divide\";\n      this.setState({\n        calcRecord: this.state.calcRecord + \" / \"\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\"\n    };\n  } // comment new comment\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calc-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.divide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.multiply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addZeroToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.handleEvaluate,\n      on: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.subtract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ClearButton, {\n      handleClear: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NumberList, {\n      calcList: calcList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewsmith/Desktop/ReactCalc/src/App.js"],"names":["React","Component","Button","Input","ClearButton","axios","CalculationList","NumberList","props","console","log","calculationList","calcList","listItems","map","number","App","constructor","addToInput","val","setState","input","state","calcRecord","addZeroToInput","addDecimal","indexOf","clearInput","add","previousNumber","operator","submit","event","preventDefault","payload","calculation","url","method","data","then","catch","handleEvaluate","calcArray","setAnswer","evaluate","currentNumber","answer","parseFloat","result","length","unshift","pop","subtract","multiply","divide","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport axios from 'axios';\nimport CalculationList from \"./components/CalculationList\";\n\nfunction NumberList(props) {\n  console.log(props)\n  const calculationList = props.calcList;\n  console.log(props.calcList)\n  const listItems = calculationList.map((number) =>\n    <li>{number}</li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\nconst calcList = [];\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n    };\n\n  }\n\n// comment new comment\n\n  addToInput = (val) => {\n    this.setState({ input: this.state.input + val });\n    this.setState({ calcRecord: this.state.calcRecord + val })\n  };\n\n  addZeroToInput = (val) => {\n    // if this.state.input is not empty then add zero\n    if (this.state.input !== \"\") {\n      this.setState({ \n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val\n       });\n    }\n  };\n\n  addDecimal = (val) => {\n    // if there is no decimal in input, then add the decimal\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({ \n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val\n       });\n    }\n  };\n\n  clearInput = () => {\n    this.setState({ \n      input: \"\",\n      calcRecord: \"\"\n    });\n  };\n\n  add = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"plus\",\n      calcRecord: this.state.calcRecord + \"+\"\n    })\n\n  };\n\nsubmit = (event) => {\n  event.preventDefault();\n\n  const payload = {\n    calculation: this.state.calcRecord\n  };\n\n  axios({\n    url: 'http://localhost:8080/api/save',\n    method: 'POST',\n    data: payload\n  })\n  .then(() => {\n    console.log('Data has been sent to server')\n  })\n  .catch(() => {\n    console.log('Internal server error')\n  });\n\n}\n\n\nhandleEvaluate = () => {\n  let calcArray = [];\n  this.setAnswer(this.evaluate());\n  this.setState({\n    input: this.evaluate()\n  }) \n}\n\n  evaluate = () => {\n    this.state.currentNumber = this.state.input;\n\n    let answer = 0;\n\n    if (this.state.operator === \"plus\") {\n      \n        answer = \n          parseFloat(this.state.previousNumber) +\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"subtract\") {\n      answer = \n          parseFloat(this.state.previousNumber) -\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"multiply\") {\n      answer = \n          parseFloat(this.state.previousNumber) *\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"divide\") {\n      answer = \n          parseFloat(this.state.previousNumber) /\n          parseFloat(this.state.currentNumber)\n      \n    }\n\n\n\n    return answer\n  };\n\nsetAnswer = (answer) => {\n\n  // calcList.unshift(this.evaluate())\nlet result = this.state.calcRecord + \" = \" + answer\n\nif (calcList.length < 10){\n  this.setState({ \n    calcRecord: result,\n    calcList: calcList.unshift(result)\n  });\n} else if (calcList.length >= 10) {\n  this.setState({ calcList: calcList.pop()})\n  this.setState({ \n    calcRecord: result,\n    calcList: calcList.unshift(result)\n  });\n}\n\n// this.submit();\n\n}\n\n  subtract = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"subtract\";\n    this.setState({ calcRecord: this.state.calcRecord + \" - \" });\n  };\n\n  multiply = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"multiply\";\n    this.setState({ calcRecord: this.state.calcRecord + \" * \" });\n  };\n\n  divide = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({ input: \"\" });\n    this.state.operator = \"divide\";\n    this.setState({ calcRecord: this.state.calcRecord + \" / \" });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.divide}>/</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.multiply}>*</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={this.addZeroToInput}>0</Button>\n            <Button handleClick={this.handleEvaluate} on>=</Button>\n            <Button handleClick={this.subtract}>-</Button>\n          </div>\n\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n          </div>\n        </div>\n        <div className=\"list-wrapper\">\n\n        <NumberList calcList={calcList} />\n\n      {/* <CalculationList>{this.state.calcRecord}</CalculationList> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}