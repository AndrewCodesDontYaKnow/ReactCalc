{"ast":null,"code":"var _jsxFileName = \"/Users/andrewsmith/Desktop/ReactCalc/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport NumberList from \"./components/NumberList\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getCalculations();\n    };\n\n    this.getCalculations = _ => {\n      fetch(\"http://localhost:4000/calculations\").then(response => response.json()).then(response => this.setState({\n        calculations: response.data\n      })).catch(err => console.error(err));\n    };\n\n    this.addCalculation = _ => {\n      const {\n        calculationArray\n      } = this.state;\n      console.log(`adding ${calculationArray[calculationArray.length - 1]} to the database`);\n      fetch(`http://localhost:4000/calculations/add?calc=${calculationArray[calculationArray.length - 1]}`) // .then(response => response.json())\n      .then(this.getCalculations).catch(err => console.error(err));\n    };\n\n    this.renderCalculation = ({\n      id,\n      calc\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 12\n        }\n      }, calc);\n    };\n\n    this.addToInput = val => {\n      if (this.state.evaluating === true) {\n        console.log(`added to input while evaluating true`);\n        this.setState({\n          input: val,\n          calcRecord: val,\n          currentNumber: val,\n          evaluating: false\n        });\n      } else if (this.state.input.slice(-1) === \" \" || !this.state.input) {\n        console.log(`added to input after operator or nothing`);\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val,\n          currentNumber: val\n        });\n      } else {\n        console.log(`added to input after number`);\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val,\n          currentNumber: this.state.currentNumber + val\n        });\n      }\n    };\n\n    this.addZeroToInput = val => {\n      // if this.state.input is not empty then add zero\n      if (this.state.input !== \"\") {\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val,\n          currentNumber: this.state.currentNumber + val\n        });\n      }\n    };\n\n    this.addDecimal = val => {\n      // if there is no decimal in input, then add the decimal\n      if (this.state.input.indexOf(\".\") === -1) {\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: \"\",\n        calcRecord: \"\"\n      });\n    };\n\n    this.handleEvaluate = () => {\n      if (this.state.evaluating === true) {\n        this.addCalculation();\n        return;\n      } else {\n        this.setAnswer(this.evaluate());\n        this.addCalculation();\n        this.setState({\n          input: this.evaluate(),\n          evaluating: true\n        });\n      }\n    };\n\n    this.evaluate = () => {\n      let answer = 0;\n\n      if (this.state.operator === \"plus\") {\n        answer = parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"subtract\") {\n        // console.log(`here is previousnumber: ${this.state.previousNumber}`)\n        // console.log(`here is currentnumber: ${this.state.currentNumber}`)\n        // console.log(`here is PARSE previousnumber: ${parseFloat(this.state.previousNumber)}`)\n        // console.log(`here is PARSE currentnumber: ${parseFloat(this.state.currentNumber)}`)\n        answer = parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"multiply\") {\n        answer = parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"divide\") {\n        answer = parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber);\n      }\n\n      return answer;\n    };\n\n    this.setAnswer = answer => {\n      let newCalculation = this.state.calcRecord + \" = \" + answer;\n      const {\n        calcList\n      } = this.state; // this.setState({ calculationList: newCalculation });\n\n      var joined = this.state.calculationArray.concat(newCalculation); // this.setState({ calculationArray: joined });\n\n      if (calcList.length < 10) {\n        this.setState({\n          calcRecord: newCalculation,\n          calculationArray: joined\n        });\n        console.log(this.state.calculationArray);\n      } else if (calcList.length >= 10) {\n        this.setState({\n          calcList: calcList.shift()\n        });\n        this.setState({\n          calcRecord: newCalculation,\n          calculationArray: joined\n        });\n      }\n    };\n\n    this.add = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: this.state.calcRecord + \" + \",\n        operator: \"plus\",\n        calcRecord: this.state.calcRecord + \" + \"\n      });\n    };\n\n    this.subtract = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: this.state.calcRecord + \" - \",\n        operator: \"subtract\",\n        calcRecord: this.state.calcRecord + \" - \"\n      });\n    };\n\n    this.multiply = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: this.state.calcRecord + \" * \",\n        operator: \"multiply\",\n        calcRecord: this.state.calcRecord + \" * \"\n      });\n    };\n\n    this.divide = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"divide\",\n        calcRecord: this.state.calcRecord + \" / \"\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n      calculations: [],\n      calculation: {\n        id: 1,\n        calc: \"sample calculation\"\n      },\n      calculationList: \"calculationListhi\",\n      calculationArray: [''],\n      calcList: [],\n      evaluating: false\n    };\n  }\n\n  render() {\n    // const { calculations } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calc-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.divide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.multiply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addZeroToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.handleEvaluate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.subtract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ClearButton, {\n      handleClear: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NumberList, {\n      calculationArray: this.state.calculationArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App; // submit = (event) => {\n//   event.preventDefault();\n//   const payload = {\n//     calculation: this.state.calcRecord\n//   };\n//   axios({\n//     url: 'http://localhost:8080/api/save',\n//     method: 'POST',\n//     data: payload\n//   })\n//   .then(() => {\n//     console.log('Data has been sent to server')\n//   })\n//   .catch(() => {\n//     console.log('Internal server error')\n//   });\n// }","map":{"version":3,"sources":["/Users/andrewsmith/Desktop/ReactCalc/src/App.js"],"names":["React","Component","Button","Input","ClearButton","NumberList","App","constructor","props","componentDidMount","getCalculations","_","fetch","then","response","json","setState","calculations","data","catch","err","console","error","addCalculation","calculationArray","state","log","length","renderCalculation","id","calc","addToInput","val","evaluating","input","calcRecord","currentNumber","slice","addZeroToInput","addDecimal","indexOf","clearInput","handleEvaluate","setAnswer","evaluate","answer","operator","parseFloat","previousNumber","newCalculation","calcList","joined","concat","shift","add","subtract","multiply","divide","calculation","calculationList","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport NumberList from \"./components/NumberList\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n      calculations: [],\n      calculation: {\n        id: 1,\n        calc: \"sample calculation\",\n      },\n      calculationList: \"calculationListhi\",\n      calculationArray: [''],\n      calcList: [],\n      evaluating: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.getCalculations();\n  };\n\n  getCalculations = (_) => {\n    fetch(\"http://localhost:4000/calculations\")\n      .then((response) => response.json())\n      .then((response) => this.setState({ calculations: response.data }))\n      .catch((err) => console.error(err));\n  };\n\n  addCalculation = (_) => {\n    const { calculationArray } = this.state;\n    console.log(`adding ${calculationArray[calculationArray.length - 1]} to the database`)\n\n    fetch(\n      `http://localhost:4000/calculations/add?calc=${calculationArray[calculationArray.length - 1]}`\n    )\n      // .then(response => response.json())\n      .then(this.getCalculations)\n      .catch((err) => console.error(err));\n  };\n\n  //\n  renderCalculation = ({ id, calc }) => {\n    return <div key={id}>{calc}</div>;\n  };\n\n  addToInput = (val) => {\n    if (this.state.evaluating === true) {\n      console.log(`added to input while evaluating true`);\n      this.setState({\n        input: val,\n        calcRecord: val,\n        currentNumber: val,\n        evaluating: false,\n      });\n    } else if (this.state.input.slice(-1) === \" \" || !this.state.input) {\n      console.log(`added to input after operator or nothing`);\n      this.setState({\n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val,\n        currentNumber: val,\n      });\n    } else {\n      console.log(`added to input after number`);\n      this.setState({\n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val,\n        currentNumber: this.state.currentNumber + val,\n      });\n    }\n  };\n\n  addZeroToInput = (val) => {\n    // if this.state.input is not empty then add zero\n    if (this.state.input !== \"\") {\n      this.setState({\n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val,\n        currentNumber: this.state.currentNumber + val,\n      });\n    }\n  };\n\n  addDecimal = (val) => {\n    // if there is no decimal in input, then add the decimal\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({\n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val,\n      });\n    }\n  };\n\n  clearInput = () => {\n    this.setState({\n      input: \"\",\n      calcRecord: \"\",\n    });\n  };\n\n  handleEvaluate = () => {\n    if(this.state.evaluating === true) {\n      this.addCalculation();\n      return;\n    } else {\n    this.setAnswer(this.evaluate());\n    this.addCalculation();\n    this.setState({\n      input: this.evaluate(),\n      evaluating: true,\n    });\n  }\n  };\n\n  evaluate = () => {\n    let answer = 0;\n\n    if (this.state.operator === \"plus\") {\n      answer =\n        parseFloat(this.state.previousNumber) +\n        parseFloat(this.state.currentNumber);\n    } else if (this.state.operator === \"subtract\") {\n      // console.log(`here is previousnumber: ${this.state.previousNumber}`)\n      // console.log(`here is currentnumber: ${this.state.currentNumber}`)\n      // console.log(`here is PARSE previousnumber: ${parseFloat(this.state.previousNumber)}`)\n      // console.log(`here is PARSE currentnumber: ${parseFloat(this.state.currentNumber)}`)\n      answer =\n        parseFloat(this.state.previousNumber) -\n        parseFloat(this.state.currentNumber);\n    } else if (this.state.operator === \"multiply\") {\n      answer =\n        parseFloat(this.state.previousNumber) *\n        parseFloat(this.state.currentNumber);\n    } else if (this.state.operator === \"divide\") {\n      answer =\n        parseFloat(this.state.previousNumber) /\n        parseFloat(this.state.currentNumber);\n    }\n    return answer;\n  };\n\n  setAnswer = (answer) => {\n\n    let newCalculation = this.state.calcRecord + \" = \" + answer;\n\n    const { calcList } = this.state;\n    // this.setState({ calculationList: newCalculation });\n\n    var joined = this.state.calculationArray.concat(newCalculation);\n    // this.setState({ calculationArray: joined });\n\n    if (calcList.length < 10) {\n      this.setState({\n        calcRecord: newCalculation,\n        calculationArray: joined,\n      });\n      console.log(this.state.calculationArray)\n    } else if (calcList.length >= 10) {\n      this.setState({ calcList: calcList.shift() });\n      this.setState({\n        calcRecord: newCalculation,\n        calculationArray: joined,\n      });\n    }\n  };\n\n  add = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: this.state.calcRecord + \" + \",\n      operator: \"plus\",\n      calcRecord: this.state.calcRecord + \" + \",\n    });\n  };\n\n  subtract = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: this.state.calcRecord + \" - \",\n      operator: \"subtract\",\n      calcRecord: this.state.calcRecord + \" - \",\n    });\n  };\n\n  multiply = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: this.state.calcRecord + \" * \",\n      operator: \"multiply\",\n      calcRecord: this.state.calcRecord + \" * \",\n    });\n  };\n\n  divide = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"divide\",\n      calcRecord: this.state.calcRecord + \" / \",\n    });\n  };\n\n  render() {\n    // const { calculations } = this.state;\n    return (\n      <div className=\"App\">\n        {/* <div className=\"calcArea\">\n          {this.state.calculations.map(this.renderCalculation)}\n        </div> */}\n\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.divide}>/</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.multiply}>*</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={this.addZeroToInput}>0</Button>\n            <Button handleClick={this.handleEvaluate}>=</Button>\n            <Button handleClick={this.subtract}>-</Button>\n          </div>\n\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n          </div>\n        </div>\n        <div className=\"list-wrapper\">\n          <NumberList calculationArray={this.state.calculationArray} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// submit = (event) => {\n//   event.preventDefault();\n\n//   const payload = {\n//     calculation: this.state.calcRecord\n//   };\n\n//   axios({\n//     url: 'http://localhost:8080/api/save',\n//     method: 'POST',\n//     data: payload\n//   })\n//   .then(() => {\n//     console.log('Data has been sent to server')\n//   })\n//   .catch(() => {\n//     console.log('Internal server error')\n//   });\n\n// }\n"]},"metadata":{},"sourceType":"module"}