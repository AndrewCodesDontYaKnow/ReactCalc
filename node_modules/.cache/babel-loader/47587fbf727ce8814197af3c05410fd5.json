{"ast":null,"code":"var _jsxFileName = \"/Users/andrewsmith/Desktop/ReactCalc/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport NumberList from \"./components/NumberList\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getCalculations();\n    };\n\n    this.getCalculations = _ => {\n      fetch(\"http://localhost:4000/calculations\").then(response => response.json()).then(response => this.setState({\n        calculations: response.data\n      })).catch(err => console.error(err));\n    };\n\n    this.addCalculation = _ => {\n      fetch(`http://localhost:4000/calculations/add?calc=${this.state.test}`) // .then(response => response.json())\n      .then(this.getCalculations).catch(err => console.error(err));\n    };\n\n    this.renderCalculation = ({\n      id,\n      calc\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 12\n        }\n      }, calc);\n    };\n\n    this.addToInput = val => {\n      if (this.state.operator === \"equals\") {\n        this.setState({\n          input: val,\n          calcRecord: val,\n          currentNumber: this.state.input + val\n        });\n      } else {\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val,\n          currentNumber: this.state.input + val\n        });\n      }\n    };\n\n    this.addZeroToInput = val => {\n      // if this.state.input is not empty then add zero\n      if (this.state.input !== \"\") {\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.addDecimal = val => {\n      // if there is no decimal in input, then add the decimal\n      if (this.state.input.indexOf(\".\") === -1) {\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: \"\",\n        calcRecord: \"\"\n      });\n    };\n\n    this.add = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"plus\",\n        calcRecord: this.state.calcRecord + \"+\"\n      });\n    };\n\n    this.handleEvaluate = () => {\n      this.setAnswer(this.evaluate());\n      this.addCalculation();\n      this.setState({\n        input: this.evaluate(),\n        operator: \"equals\"\n      });\n    };\n\n    this.evaluate = () => {\n      let answer = 0;\n\n      if (this.state.operator === \"plus\") {\n        answer = parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"subtract\") {\n        answer = parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"multiply\") {\n        answer = parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"divide\") {\n        answer = parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber);\n      }\n\n      return answer;\n    };\n\n    this.setAnswer = answer => {\n      let result = this.state.calcRecord + \" = \" + answer;\n      console.log(`result is: ${result}, setting test equal to it..`);\n      const {\n        calcList\n      } = this.state;\n      this.setState({\n        test: result\n      });\n\n      if (calcList.length < 10) {\n        this.setState({\n          calcRecord: result,\n          calcList: calcList.unshift(result)\n        });\n      } else if (calcList.length >= 10) {\n        this.setState({\n          calcList: calcList.pop()\n        });\n        this.setState({\n          calcRecord: result,\n          calcList: calcList.unshift(result)\n        });\n      }\n    };\n\n    this.subtract = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"subtract\",\n        calcRecord: this.state.calcRecord + \" - \"\n      });\n    };\n\n    this.multiply = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"multiply\",\n        calcRecord: this.state.calcRecord + \" * \"\n      });\n    };\n\n    this.divide = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"divide\",\n        calcRecord: this.state.calcRecord + \" / \"\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n      calculations: [],\n      calculation: {\n        id: 1,\n        calc: \"sample calculation\"\n      },\n      test: \"testhi\",\n      calcList: []\n    };\n  }\n\n  render() {\n    // const { calculations } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calcArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, this.state.calculations.map(this.renderCalculation)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calc-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.divide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.multiply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addZeroToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.handleEvaluate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.subtract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ClearButton, {\n      handleClear: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NumberList, {\n      calcList: this.state.test,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App; // submit = (event) => {\n//   event.preventDefault();\n//   const payload = {\n//     calculation: this.state.calcRecord\n//   };\n//   axios({\n//     url: 'http://localhost:8080/api/save',\n//     method: 'POST',\n//     data: payload\n//   })\n//   .then(() => {\n//     console.log('Data has been sent to server')\n//   })\n//   .catch(() => {\n//     console.log('Internal server error')\n//   });\n// }","map":{"version":3,"sources":["/Users/andrewsmith/Desktop/ReactCalc/src/App.js"],"names":["React","Component","Button","Input","ClearButton","NumberList","App","constructor","props","componentDidMount","getCalculations","_","fetch","then","response","json","setState","calculations","data","catch","err","console","error","addCalculation","state","test","renderCalculation","id","calc","addToInput","val","operator","input","calcRecord","currentNumber","addZeroToInput","addDecimal","indexOf","clearInput","add","previousNumber","handleEvaluate","setAnswer","evaluate","answer","parseFloat","result","log","calcList","length","unshift","pop","subtract","multiply","divide","calculation","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport NumberList from \"./components/NumberList\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n      calculations: [],\n      calculation: {\n        id: 1,\n        calc: \"sample calculation\",\n      },\n      test: \"testhi\",\n      calcList: [],\n    };\n  }\n\n  componentDidMount = () => {\n    this.getCalculations();\n  };\n\n  getCalculations = (_) => {\n    fetch(\"http://localhost:4000/calculations\")\n      .then((response) => response.json())\n      .then((response) => this.setState({ calculations: response.data }))\n      .catch((err) => console.error(err));\n  };\n\n  addCalculation = (_) => {\n    fetch(`http://localhost:4000/calculations/add?calc=${this.state.test}`)\n      // .then(response => response.json())\n      .then(this.getCalculations)\n      .catch((err) => console.error(err));\n  };\n\n  //\n  renderCalculation = ({ id, calc }) => {\n    return <div key={id}>{calc}</div>;\n  };\n\n  addToInput = (val) => {\n    if (this.state.operator === \"equals\") {\n      this.setState({\n        input: val,\n        calcRecord: val,\n        currentNumber: this.state.input + val,\n      });\n    } else {\n      this.setState({\n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val,\n        currentNumber: this.state.input + val,\n      });\n    }\n  };\n\n  addZeroToInput = (val) => {\n    // if this.state.input is not empty then add zero\n    if (this.state.input !== \"\") {\n      this.setState({\n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val,\n      });\n    }\n  };\n\n  addDecimal = (val) => {\n    // if there is no decimal in input, then add the decimal\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({\n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val,\n      });\n    }\n  };\n\n  clearInput = () => {\n    this.setState({\n      input: \"\",\n      calcRecord: \"\",\n    });\n  };\n\n  add = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"plus\",\n      calcRecord: this.state.calcRecord + \"+\",\n    });\n  };\n\n  handleEvaluate = () => {\n    this.setAnswer(this.evaluate());\n    this.addCalculation();\n    this.setState({\n      input: this.evaluate(),\n      operator: \"equals\",\n    });\n  };\n\n  evaluate = () => {\n    let answer = 0;\n\n    if (this.state.operator === \"plus\") {\n      answer =\n        parseFloat(this.state.previousNumber) +\n        parseFloat(this.state.currentNumber);\n    } else if (this.state.operator === \"subtract\") {\n      answer =\n        parseFloat(this.state.previousNumber) -\n        parseFloat(this.state.currentNumber);\n    } else if (this.state.operator === \"multiply\") {\n      answer =\n        parseFloat(this.state.previousNumber) *\n        parseFloat(this.state.currentNumber);\n    } else if (this.state.operator === \"divide\") {\n      answer =\n        parseFloat(this.state.previousNumber) /\n        parseFloat(this.state.currentNumber);\n    }\n    return answer;\n  };\n\n  setAnswer = (answer) => {\n    let result = this.state.calcRecord + \" = \" + answer;\n    console.log(`result is: ${result}, setting test equal to it..`);\n\n    const { calcList } = this.state;\n    this.setState({ test: result });\n\n    if (calcList.length < 10) {\n      this.setState({\n        calcRecord: result,\n        calcList: calcList.unshift(result),\n      });\n    } else if (calcList.length >= 10) {\n      this.setState({ calcList: calcList.pop() });\n      this.setState({\n        calcRecord: result,\n        calcList: calcList.unshift(result),\n      });\n    }\n  };\n\n  subtract = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"subtract\",\n      calcRecord: this.state.calcRecord + \" - \",\n    });\n  };\n\n  multiply = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"multiply\",\n      calcRecord: this.state.calcRecord + \" * \",\n    });\n  };\n\n  divide = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"divide\",\n      calcRecord: this.state.calcRecord + \" / \",\n    });\n  };\n\n  render() {\n    // const { calculations } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"calcArea\">\n          {this.state.calculations.map(this.renderCalculation)}\n        </div>\n\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.divide}>/</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.multiply}>*</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={this.addZeroToInput}>0</Button>\n            <Button handleClick={this.handleEvaluate}>=</Button>\n            <Button handleClick={this.subtract}>-</Button>\n          </div>\n\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n          </div>\n        </div>\n        <div className=\"list-wrapper\">\n          <NumberList calcList={this.state.test} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// submit = (event) => {\n//   event.preventDefault();\n\n//   const payload = {\n//     calculation: this.state.calcRecord\n//   };\n\n//   axios({\n//     url: 'http://localhost:8080/api/save',\n//     method: 'POST',\n//     data: payload\n//   })\n//   .then(() => {\n//     console.log('Data has been sent to server')\n//   })\n//   .catch(() => {\n//     console.log('Internal server error')\n//   });\n\n// }\n"]},"metadata":{},"sourceType":"module"}