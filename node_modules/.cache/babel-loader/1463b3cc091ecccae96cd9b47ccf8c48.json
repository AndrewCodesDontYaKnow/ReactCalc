{"ast":null,"code":"var _jsxFileName = \"/Users/andrewsmith/Desktop/ReactCalc/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport NumberList from \"./components/NumberList\"; // import axios from 'axios';\n// function NumberList(props) {\n//   // console.log(props)\n//   const calculationList = props.calcList;\n//   // console.log(props.calcList)\n//   const listItems = calculationList.map((number) =>\n//     <li>{number}</li>\n//   );\n//   return (\n//     <ul>{listItems}</ul>\n//   );\n// }\n// const calcList = [];\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.getCalculations = _ => {\n      fetch('http://localhost:4000/calculations').then(response => response.json()).then(response => this.setState({\n        calculations: response.data\n      })).catch(err => console.error(err));\n    };\n\n    this.addCalculation = _ => {\n      fetch(`http://localhost:4000/calculations/add?calc=${this.state.test}`) // .then(response => response.json())\n      .then(this.getCalculations).catch(err => console.error(err));\n    };\n\n    this.renderCalculation = ({\n      id,\n      calc\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 39\n      }\n    }, calc);\n\n    this.addToInput = val => {\n      this.setState({\n        input: this.state.input + val\n      });\n      this.setState({\n        calcRecord: this.state.calcRecord + val\n      });\n      this.setState({\n        currentNumber: this.state.input + val\n      });\n      this.setState({\n        input: this.state.input + val\n      });\n    };\n\n    this.addZeroToInput = val => {\n      // if this.state.input is not empty then add zero\n      if (this.state.input !== \"\") {\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.addDecimal = val => {\n      // if there is no decimal in input, then add the decimal\n      if (this.state.input.indexOf(\".\") === -1) {\n        this.setState({\n          input: this.state.input + val,\n          calcRecord: this.state.calcRecord + val\n        });\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: \"\",\n        calcRecord: \"\"\n      });\n    };\n\n    this.add = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"plus\",\n        calcRecord: this.state.calcRecord + \"+\"\n      });\n    };\n\n    this.handleEvaluate = () => {\n      this.setAnswer(this.evaluate());\n      this.addCalculation();\n      this.setState({\n        input: this.evaluate()\n      });\n    };\n\n    this.evaluate = () => {\n      let answer = 0;\n\n      if (this.state.operator === \"plus\") {\n        answer = parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"subtract\") {\n        answer = parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"multiply\") {\n        answer = parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber);\n      } else if (this.state.operator === \"divide\") {\n        answer = parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber);\n      }\n\n      return answer;\n    };\n\n    this.setAnswer = answer => {\n      let result = this.state.calcRecord + \" = \" + answer;\n      console.log(`result is: ${result}, setting test equal to it..`);\n      const {\n        calcList\n      } = this.state;\n      this.setState({\n        test: result\n      });\n\n      if (calcList.length < 10) {\n        this.setState({\n          calcRecord: result,\n          calcList: calcList.unshift(result)\n        });\n      } else if (calcList.length >= 10) {\n        this.setState({\n          calcList: calcList.pop()\n        });\n        this.setState({\n          calcRecord: result,\n          calcList: calcList.unshift(result)\n        });\n      }\n    };\n\n    this.subtract = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"subtract\",\n        calcRecord: this.state.calcRecord + \" - \"\n      });\n    };\n\n    this.multiply = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"multiply\",\n        calcRecord: this.state.calcRecord + \" * \"\n      });\n    };\n\n    this.divide = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"divide\",\n        calcRecord: this.state.calcRecord + \" / \"\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n      calculations: [],\n      calculation: {\n        id: 1,\n        calc: 'sample calculation'\n      },\n      test: 'testhi',\n      calcList: []\n    };\n  }\n\n  componentDidMount() {\n    this.getCalculations();\n  }\n\n  render() {\n    // const { calculations } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calcArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }, this.state.calculations.map(this.renderCalculation)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calc-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.divide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.multiply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addZeroToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.handleEvaluate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.subtract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ClearButton, {\n      handleClear: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NumberList, {\n      calcList: this.state.test,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default App; // submit = (event) => {\n//   event.preventDefault();\n//   const payload = {\n//     calculation: this.state.calcRecord\n//   };\n//   axios({\n//     url: 'http://localhost:8080/api/save',\n//     method: 'POST',\n//     data: payload\n//   })\n//   .then(() => {\n//     console.log('Data has been sent to server')\n//   })\n//   .catch(() => {\n//     console.log('Internal server error')\n//   });\n// }","map":{"version":3,"sources":["/Users/andrewsmith/Desktop/ReactCalc/src/App.js"],"names":["React","Component","Button","Input","ClearButton","NumberList","App","constructor","props","getCalculations","_","fetch","then","response","json","setState","calculations","data","catch","err","console","error","addCalculation","state","test","renderCalculation","id","calc","addToInput","val","input","calcRecord","currentNumber","addZeroToInput","addDecimal","indexOf","clearInput","add","previousNumber","operator","handleEvaluate","setAnswer","evaluate","answer","parseFloat","result","log","calcList","length","unshift","pop","subtract","multiply","divide","calculation","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport NumberList from \"./components/NumberList\";\n// import axios from 'axios';\n\n\n\n// function NumberList(props) {\n//   // console.log(props)\n//   const calculationList = props.calcList;\n//   // console.log(props.calcList)\n//   const listItems = calculationList.map((number) =>\n//     <li>{number}</li>\n//   );\n//   return (\n//     <ul>{listItems}</ul>\n//   );\n// }\n// const calcList = [];\n\nclass App extends Component {\n  // container for holding the states\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n      calcRecord: \"\",\n      answer: \"\",\n      calculations: [],\n      calculation: {\n        id: 1,\n        calc: 'sample calculation'\n      },\n      test: 'testhi',\n      calcList: []\n    };\n\n    \n  }\n\ncomponentDidMount() {\n  this.getCalculations();\n}\n\n\ngetCalculations = _ => {\n  fetch('http://localhost:4000/calculations')\n    .then(response => response.json())\n    .then(response => this.setState({ calculations: response.data }))\n    .catch(err => console.error(err))\n}\n\naddCalculation = _ => {\n  fetch(`http://localhost:4000/calculations/add?calc=${this.state.test}`)\n    // .then(response => response.json())\n    .then(this.getCalculations)\n    .catch(err => console.error(err))\n}\n\n// \nrenderCalculation = ({ id, calc }) => <div key={id}>{calc}</div>\n\n\n// comment new comment\n  addToInput = (val) => {\n    this.setState({ input: this.state.input + val });\n    this.setState({ calcRecord: this.state.calcRecord + val })\n    this.setState({ currentNumber: this.state.input + val })\n\n    this.setState({\n      input: this.state.input + val\n    })\n  };\n\n  addZeroToInput = (val) => {\n    // if this.state.input is not empty then add zero\n    if (this.state.input !== \"\") {\n      this.setState({ \n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val\n       });\n    }\n  };\n\n  addDecimal = (val) => {\n    // if there is no decimal in input, then add the decimal\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({ \n        input: this.state.input + val,\n        calcRecord: this.state.calcRecord + val\n       });\n    }\n  };\n\n  clearInput = () => {\n    this.setState({ \n      input: \"\",\n      calcRecord: \"\"\n    });\n  };\n\n  add = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"plus\",\n      calcRecord: this.state.calcRecord + \"+\"\n    })\n\n  };\n\n\nhandleEvaluate = () => {\n  this.setAnswer(this.evaluate())\n  this.addCalculation();\n  this.setState({\n    input: this.evaluate()\n  }) \n}\n\n  evaluate = () => {\n\n    let answer = 0;\n\n    if (this.state.operator === \"plus\") {\n      \n        answer = \n          parseFloat(this.state.previousNumber) +\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"subtract\") {\n      answer = \n          parseFloat(this.state.previousNumber) -\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"multiply\") {\n      answer = \n          parseFloat(this.state.previousNumber) *\n          parseFloat(this.state.currentNumber)\n      \n    } else if (this.state.operator === \"divide\") {\n      answer = \n          parseFloat(this.state.previousNumber) /\n          parseFloat(this.state.currentNumber)\n      \n    }\n    return answer\n  };\n\nsetAnswer = (answer) => {\n\nlet result = this.state.calcRecord + \" = \" + answer\nconsole.log(`result is: ${result}, setting test equal to it..`)\n\nconst { calcList } = this.state;\nthis.setState({ test: result })\n\nif (calcList.length < 10){\n  this.setState({ \n    calcRecord: result,\n    calcList: calcList.unshift(result)\n  });\n} else if (calcList.length >= 10) {\n  this.setState({ calcList: calcList.pop()})\n  this.setState({ \n    calcRecord: result,\n    calcList: calcList.unshift(result)\n  });\n}}\n\n\n  subtract = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"subtract\",\n      calcRecord: this.state.calcRecord + \" - \"\n    })\n  };\n\n  multiply = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"multiply\",\n      calcRecord: this.state.calcRecord + \" * \"\n    })  };\n\n  divide = () => {\n    this.setState({\n      previousNumber: this.state.input,\n      input: \"\",\n      operator: \"divide\",\n      calcRecord: this.state.calcRecord + \" / \"\n    })\n  };\n\n  render() {\n    // const { calculations } = this.state;\n    return (\n      <div className=\"App\">\n\n        <div className=\"calcArea\">\n          {this.state.calculations.map(this.renderCalculation)}\n        </div>\n\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.divide}>/</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.multiply}>*</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={this.addZeroToInput}>0</Button>\n            <Button handleClick={this.handleEvaluate}>=</Button>\n            <Button handleClick={this.subtract}>-</Button>\n          </div>\n\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n          </div>\n        </div>\n        <div className=\"list-wrapper\">\n\n        <NumberList calcList={this.state.test} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n// submit = (event) => {\n//   event.preventDefault();\n\n//   const payload = {\n//     calculation: this.state.calcRecord\n//   };\n\n//   axios({\n//     url: 'http://localhost:8080/api/save',\n//     method: 'POST',\n//     data: payload\n//   })\n//   .then(() => {\n//     console.log('Data has been sent to server')\n//   })\n//   .catch(() => {\n//     console.log('Internal server error')\n//   });\n\n// }"]},"metadata":{},"sourceType":"module"}